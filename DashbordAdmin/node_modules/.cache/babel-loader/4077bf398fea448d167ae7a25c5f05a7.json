{"ast":null,"code":"var _jsxFileName = \"C:\\\\dashbord\\\\DashbordAdmin\\\\src\\\\pages\\\\erro\\\\index.js\";\nimport 'style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Erro = () => {\n  let frames = 0;\n  const som_Hit = new Audio();\n  som_Hit.src = './efeitos/hit.wav';\n  const sprite = new Image();\n  sprite.src = './sprites.png';\n  const canvas = document.querySelector('canvas');\n  const contexto = canvas.getContext('2d'); // Plano de fundo \n\n  const planodefundo = {\n    spriteX: 390,\n    spriteY: 0,\n    largura: 275,\n    altura: 204,\n    x: 0,\n    y: canvas.height - 204,\n\n    desenha() {\n      contexto.fillStyle = '#70c5ce';\n      contexto.fillRect(0, 0, canvas.width, canvas.height);\n      contexto.drawImage(sprite, // Imagens  que carregamos em sprites \n      planodefundo.spriteX, planodefundo.spriteY, // Sprite X, Sprite Y\n      planodefundo.largura, planodefundo.altura, // with , height Tamanho do recorte na sprites\n      planodefundo.x, planodefundo.y, // with , width Posicao que vai ficar na tela \n      planodefundo.largura, planodefundo.altura);\n      contexto.drawImage(sprite, // Imagens  que carregamos em sprites \n      planodefundo.spriteX, planodefundo.spriteY, // Sprite X, Sprite Y\n      planodefundo.largura, planodefundo.altura, // with , height Tamanho do recorte na sprites\n      planodefundo.x + planodefundo.largura, planodefundo.y, // with , width Posicao que vai ficar na tela \n      planodefundo.largura, planodefundo.altura);\n    }\n\n  }; // chao\n\n  function CriaChao() {\n    const chao = {\n      spriteX: 0,\n      spriteY: 610,\n      largura: 224,\n      altura: 112,\n      x: 0,\n      y: canvas.height - 112,\n\n      atualiza() {\n        const movimentoDoChao = 3;\n        const repeteEm = chao.largura / 2;\n        const movimentacao = chao.x - movimentoDoChao; //console.log('[chao.x]', chao.x)\n        //console.log('[repeteEM]', repeteEm)\n        //console.log('[movimentacao]', movimentacao)\n\n        chao.x = movimentacao % repeteEm;\n      },\n\n      desenha() {\n        contexto.drawImage(sprite, // Imagens  que carregamos em sprites \n        chao.spriteX, chao.spriteY, // Sprite X, Sprite Y\n        chao.largura, chao.altura, // with , height Tamanho do recorte na sprites\n        chao.x, chao.y, // with , height Posicao que vai ficar na tela \n        chao.largura, chao.altura);\n        contexto.drawImage(sprite, // Imagens  que carregamos em sprites \n        chao.spriteX, chao.spriteY, // Sprite X, Sprite Y\n        chao.largura, chao.altura, // with , height Tamanho do recorte na sprites\n        chao.x + chao.largura, chao.y, // with , height Posicao que vai ficar na tela \n        chao.largura, chao.altura);\n      }\n\n    };\n    return chao;\n  } // flappyBird\n\n\n  function fazcolisao(flappyBird, chao) {\n    const flappyBirdY = flappyBird.y + flappyBird.altura;\n    const chaoY = chao.y;\n\n    if (flappyBirdY >= chaoY) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function criaflappyBird() {\n    let flappyBird = {\n      spriteX: 0,\n      spriteY: 0,\n      largura: 33,\n      altura: 24,\n      x: 10,\n      y: 50,\n      pulo: 4.6,\n\n      pula() {\n        flappyBird.velocidade = -flappyBird.pulo;\n      },\n\n      gravidade: 0.25,\n      velocidade: 0,\n\n      atualiza() {\n        if (fazcolisao(flappyBird, globais.chao)) {\n          console.log('fez colisao');\n          som_Hit.play();\n          setTimeout(() => {\n            MudaParaTela(Telas.GAME_OVER);\n          }, 500);\n          return;\n        }\n\n        flappyBird.velocidade = flappyBird.velocidade + flappyBird.gravidade, flappyBird.y = flappyBird.y + flappyBird.velocidade;\n      },\n\n      movimentos: [{\n        spriteX: 0,\n        spriteY: 0\n      }, // asa pra cima\n      {\n        spriteX: 0,\n        spriteY: 26\n      }, // asa no meio \n      {\n        spriteX: 0,\n        spriteY: 52\n      } // asa pra baixo \n      ],\n      frameAtual: 0,\n\n      atualizaOframeAtual() {\n        const intervaloDeFrame = 10;\n        const passouOintervalo = frames % intervaloDeFrame === 0;\n\n        if (passouOintervalo) {\n          const baseDoIncremento = 1;\n          const Incremento = baseDoIncremento + flappyBird.frameAtual;\n          const BaseRepeticao = flappyBird.movimentos.length;\n          flappyBird.frameAtual = Incremento % BaseRepeticao;\n        }\n      },\n\n      desenha() {\n        flappyBird.atualizaOframeAtual();\n        const {\n          spriteX,\n          spriteY\n        } = flappyBird.movimentos[flappyBird.frameAtual];\n        contexto.drawImage(sprite, // Imagens  que carregamos em sprites \n        spriteX, spriteY, // Sprite X, Sprite Y\n        flappyBird.largura, flappyBird.altura, // with , height Tamanho do recorte na sprites\n        flappyBird.x, flappyBird.y, // with , width Posicao que vai ficar na tela \n        flappyBird.largura, flappyBird.altura);\n      }\n\n    };\n    return flappyBird;\n  } // mensagem Get Ready tela de inicio\n\n\n  const mensagemGetReady = {\n    spriteX: 134,\n    spriteY: 0,\n    largura: 174,\n    altura: 152,\n    x: canvas.width / 2 - 174 / 2,\n    y: 50,\n\n    desenha() {\n      contexto.drawImage(sprite, // Imagens  que carregamos em sprites \n      mensagemGetReady.spriteX, mensagemGetReady.spriteY, // Sprite X, Sprite Y\n      mensagemGetReady.largura, mensagemGetReady.altura, // with , height Tamanho do recorte na sprites\n      mensagemGetReady.x, mensagemGetReady.y, // with , width Posicao que vai ficar na tela \n      mensagemGetReady.largura, mensagemGetReady.altura);\n    }\n\n  }; // tela game over \n\n  const mensagemGameOver = {\n    spriteX: 134,\n    spriteY: 153,\n    largura: 226,\n    altura: 200,\n    x: canvas.width / 2 - 226 / 2,\n    y: 50,\n\n    desenha() {\n      contexto.drawImage(sprite, // Imagens  que carregamos em sprites \n      mensagemGameOver.spriteX, mensagemGameOver.spriteY, // Sprite X, Sprite Y\n      mensagemGameOver.largura, mensagemGameOver.altura, // with , height Tamanho do recorte na sprites\n      mensagemGameOver.x, mensagemGameOver.y, // with , width Posicao que vai ficar na tela \n      mensagemGameOver.largura, mensagemGameOver.altura);\n    }\n\n  }; // cria os canos\n\n  function CriaCanos() {\n    const canos = {\n      largura: 52,\n      altura: 400,\n      chao: {\n        spriteX: 0,\n        spriteY: 169\n      },\n      ceu: {\n        spriteX: 52,\n        spriteY: 169\n      },\n      espaco: 80,\n\n      desenha() {\n        canos.pares.forEach(function (par) {\n          const yRandom = par.y;\n          const espacamentoEntreCanos = 100;\n          const canoCeuX = par.x;\n          const canoCeuY = yRandom; // [Cano do ceu ]\n\n          contexto.drawImage(sprite, // Imagens  que carregamos em sprites\n          canos.ceu.spriteX, canos.ceu.spriteY, canos.largura, canos.altura, canoCeuX, canoCeuY, canos.largura, canos.altura);\n          const canoChaoX = par.x;\n          const canoChaoY = canos.altura + espacamentoEntreCanos + yRandom; // [cano do chao]\n\n          contexto.drawImage(sprite, // Imagens  que carregamos em sprites\n          canos.chao.spriteX, canos.chao.spriteY, canos.largura, canos.altura, canoChaoX, canoChaoY, canos.largura, canos.altura);\n          par.canoCeu = {\n            x: canoCeuX,\n            y: canos.altura + canoCeuY\n          }, par.canoChao = {\n            x: canoChaoX,\n            y: canoChaoY\n          };\n        });\n      },\n\n      temColisaoComOFlappyBird(par) {\n        const cabecaDoFlappy = globais.flappyBird.y;\n        const peDoFlappy = globais.flappyBird.y + globais.flappyBird.altura;\n\n        if (globais.flappyBird.x >= par.x) {\n          if (cabecaDoFlappy <= par.canoCeu.y) {\n            som_Hit.play();\n            return true;\n          }\n\n          if (peDoFlappy >= par.canoChao.y) {\n            som_Hit.play();\n            return true;\n          }\n\n          if (globais.flappyBird.x == par.x) {\n            contador = contador + 1;\n          }\n        }\n\n        return false;\n      },\n\n      pares: [],\n\n      atualiza() {\n        const passou100Frames = frames % 100 === 0;\n\n        if (passou100Frames) {\n          canos.pares.push({\n            x: canvas.width,\n            y: -150 * (Math.random() + 1)\n          });\n        }\n\n        canos.pares.forEach(function (par) {\n          par.x = par.x - 5;\n\n          if (canos.temColisaoComOFlappyBird(par)) {\n            MudaParaTela(Telas.GAME_OVER);\n          }\n\n          if (par.x + canos.largura <= 0) {\n            canos.pares.shift();\n          }\n        });\n      }\n\n    };\n    return canos;\n  }\n\n  function CriaPlacar() {\n    const placar = {\n      desenha(font, x, y) {\n        contexto.font = `${font}px \"VT323\"`;\n        contexto.textAlign = 'right';\n        contexto.fillStyle = 'white';\n        contexto.fillText(`${contador}`, canvas.width - x, y);\n      }\n\n    };\n    return placar;\n  } // criação Telas\n\n\n  const globais = {};\n  let TelaAtiva = {};\n  let contador = 0;\n\n  function MudaParaTela(novaTela) {\n    TelaAtiva = novaTela;\n\n    if (TelaAtiva.inicializa) {\n      TelaAtiva.inicializa();\n    }\n  }\n\n  const Telas = {\n    Inicio: {\n      inicializa() {\n        globais.flappyBird = criaflappyBird();\n        globais.canos = CriaCanos();\n        globais.chao = CriaChao();\n      },\n\n      desenha() {\n        planodefundo.desenha();\n        globais.chao.desenha();\n        globais.flappyBird.desenha();\n        mensagemGetReady.desenha();\n      },\n\n      click() {\n        MudaParaTela(Telas.Jogo);\n      },\n\n      atualiza() {\n        globais.chao.atualiza();\n      }\n\n    }\n  };\n  Telas.Jogo = {\n    inicializa() {\n      globais.placar = CriaPlacar();\n    },\n\n    desenha() {\n      planodefundo.desenha();\n      globais.canos.desenha();\n      globais.chao.desenha();\n      globais.flappyBird.desenha();\n      globais.placar.desenha(35, 10, 35);\n    },\n\n    click() {\n      globais.flappyBird.pula();\n    },\n\n    atualiza() {\n      globais.canos.atualiza();\n      globais.chao.atualiza();\n      globais.flappyBird.atualiza();\n    }\n\n  };\n  Telas.GAME_OVER = {\n    inicializa() {\n      globais.chao = CriaChao();\n      globais.placar = CriaPlacar();\n    },\n\n    desenha() {\n      planodefundo.desenha();\n      mensagemGameOver.desenha();\n      globais.placar.desenha(30, 80, 145);\n    },\n\n    atualiza() {},\n\n    click() {\n      MudaParaTela(Telas.Inicio);\n      contador = 0;\n    }\n\n  };\n\n  function loop() {\n    TelaAtiva.desenha();\n    TelaAtiva.atualiza();\n    frames = frames + 1;\n    requestAnimationFrame(loop); // Vai ajudar desenhar na tela de forma performatica\n  }\n\n  window.addEventListener('click', function () {\n    if (TelaAtiva.click) {\n      TelaAtiva.click();\n    }\n  });\n  MudaParaTela(Telas.Inicio);\n  loop();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"game-canvas\",\n      width: \"320\",\n      height: \"480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Erro;\nexport default Erro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Erro\");","map":{"version":3,"sources":["C:/dashbord/DashbordAdmin/src/pages/erro/index.js"],"names":["Erro","frames","som_Hit","Audio","src","sprite","Image","canvas","document","querySelector","contexto","getContext","planodefundo","spriteX","spriteY","largura","altura","x","y","height","desenha","fillStyle","fillRect","width","drawImage","CriaChao","chao","atualiza","movimentoDoChao","repeteEm","movimentacao","fazcolisao","flappyBird","flappyBirdY","chaoY","criaflappyBird","pulo","pula","velocidade","gravidade","globais","console","log","play","setTimeout","MudaParaTela","Telas","GAME_OVER","movimentos","frameAtual","atualizaOframeAtual","intervaloDeFrame","passouOintervalo","baseDoIncremento","Incremento","BaseRepeticao","length","mensagemGetReady","mensagemGameOver","CriaCanos","canos","ceu","espaco","pares","forEach","par","yRandom","espacamentoEntreCanos","canoCeuX","canoCeuY","canoChaoX","canoChaoY","canoCeu","canoChao","temColisaoComOFlappyBird","cabecaDoFlappy","peDoFlappy","contador","passou100Frames","push","Math","random","shift","CriaPlacar","placar","font","textAlign","fillText","TelaAtiva","novaTela","inicializa","Inicio","click","Jogo","loop","requestAnimationFrame","window","addEventListener"],"mappings":"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","sourcesContent":["import 'style.css'\r\n\r\nconst Erro = () =>{\r\n    let frames = 0;\r\n    const som_Hit = new Audio();\r\n    som_Hit.src = './efeitos/hit.wav'\r\n    \r\n    const sprite = new Image();\r\n    sprite.src = './sprites.png';\r\n    \r\n    const canvas = document.querySelector('canvas');\r\n    const contexto = canvas.getContext('2d');\r\n    \r\n    \r\n    // Plano de fundo \r\n     const planodefundo = {\r\n        spriteX: 390,\r\n        spriteY: 0,\r\n        largura: 275,\r\n        altura:  204,\r\n        x:       0,\r\n        y:       canvas.height - 204,\r\n        desenha(){\r\n            contexto.fillStyle = '#70c5ce'\r\n            contexto.fillRect(0,0, canvas.width, canvas.height)\r\n    \r\n            contexto.drawImage(\r\n                sprite, // Imagens  que carregamos em sprites \r\n                planodefundo.spriteX,planodefundo.spriteY,     // Sprite X, Sprite Y\r\n                planodefundo.largura,planodefundo.altura,      // with , height Tamanho do recorte na sprites\r\n                planodefundo.x, planodefundo.y,                // with , width Posicao que vai ficar na tela \r\n                planodefundo.largura,planodefundo.altura,  \r\n            );\r\n    \r\n            contexto.drawImage(\r\n                sprite, // Imagens  que carregamos em sprites \r\n                planodefundo.spriteX,planodefundo.spriteY,     // Sprite X, Sprite Y\r\n                planodefundo.largura,planodefundo.altura,      // with , height Tamanho do recorte na sprites\r\n                planodefundo.x + planodefundo.largura, planodefundo.y,                // with , width Posicao que vai ficar na tela \r\n                planodefundo.largura,planodefundo.altura,  \r\n            );\r\n        }\r\n     }\r\n    \r\n    \r\n    \r\n    // chao\r\n    function CriaChao() {\r\n        const chao = {\r\n            spriteX: 0,\r\n            spriteY: 610,\r\n            largura: 224,\r\n            altura:  112,\r\n            x:       0,\r\n            y:       canvas.height - 112,\r\n            atualiza() {\r\n                const movimentoDoChao = 3;\r\n                const repeteEm = chao.largura /  2;\r\n                const movimentacao  = chao.x - movimentoDoChao;\r\n                \r\n                //console.log('[chao.x]', chao.x)\r\n                //console.log('[repeteEM]', repeteEm)\r\n                //console.log('[movimentacao]', movimentacao)\r\n    \r\n                chao.x = movimentacao % repeteEm;\r\n            },\r\n            desenha() {\r\n                contexto.drawImage(\r\n                    sprite,                         // Imagens  que carregamos em sprites \r\n                    chao.spriteX,chao.spriteY,      // Sprite X, Sprite Y\r\n                    chao.largura,chao.altura,       // with , height Tamanho do recorte na sprites\r\n                    chao.x, chao.y,                 // with , height Posicao que vai ficar na tela \r\n                    chao.largura,chao.altura,  \r\n                );\r\n    \r\n                contexto.drawImage(\r\n                    sprite,                         // Imagens  que carregamos em sprites \r\n                    chao.spriteX,chao.spriteY,      // Sprite X, Sprite Y\r\n                    chao.largura,chao.altura,       // with , height Tamanho do recorte na sprites\r\n                    chao.x + chao.largura, chao.y,  // with , height Posicao que vai ficar na tela \r\n                    chao.largura,chao.altura,  \r\n                );\r\n            }\r\n        }\r\n        return chao\r\n    }\r\n    // flappyBird\r\n    \r\n    function fazcolisao(flappyBird, chao) { \r\n        const flappyBirdY = flappyBird.y +flappyBird.altura;\r\n        const chaoY = chao.y\r\n    \r\n        if(flappyBirdY >= chaoY) {\r\n            return true;\r\n        }else {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    function criaflappyBird () {\r\n    \r\n        let flappyBird = {\r\n            spriteX: 0,\r\n            spriteY: 0,\r\n            largura: 33,\r\n            altura:  24,\r\n            x:       10,\r\n            y:       50,\r\n            pulo: 4.6,\r\n            pula(){\r\n                flappyBird.velocidade = - flappyBird.pulo\r\n            },\r\n            gravidade: 0.25,\r\n            velocidade:0,\r\n            atualiza(){\r\n                if(fazcolisao(flappyBird, globais.chao)){\r\n                    console.log('fez colisao')\r\n                    som_Hit.play();\r\n    \r\n                    setTimeout(()=>{\r\n                        MudaParaTela(Telas.GAME_OVER)\r\n                    },500)\r\n                   \r\n                    \r\n                    return\r\n                }\r\n                flappyBird.velocidade = flappyBird.velocidade + flappyBird.gravidade,\r\n                flappyBird.y = flappyBird.y + flappyBird.velocidade\r\n            },\r\n            movimentos:[\r\n                { spriteX: 0, spriteY:  0}, // asa pra cima\r\n                { spriteX: 0, spriteY: 26}, // asa no meio \r\n                { spriteX: 0, spriteY: 52}, // asa pra baixo \r\n            ],\r\n            frameAtual: 0, \r\n            atualizaOframeAtual(){\r\n                const intervaloDeFrame = 10;\r\n                const passouOintervalo = frames % intervaloDeFrame === 0;\r\n                if (passouOintervalo){\r\n                const baseDoIncremento = 1;\r\n                const Incremento = baseDoIncremento + flappyBird.frameAtual\r\n                const BaseRepeticao = flappyBird.movimentos.length;\r\n                flappyBird.frameAtual = Incremento % BaseRepeticao;\r\n                }\r\n            },\r\n            desenha() {\r\n                flappyBird.atualizaOframeAtual();\r\n                const {spriteX , spriteY} =  flappyBird.movimentos[flappyBird.frameAtual];\r\n                contexto.drawImage(\r\n                    sprite,                                    // Imagens  que carregamos em sprites \r\n                    spriteX,spriteY,     // Sprite X, Sprite Y\r\n                    flappyBird.largura,flappyBird.altura,      // with , height Tamanho do recorte na sprites\r\n                    flappyBird.x, flappyBird.y,                // with , width Posicao que vai ficar na tela \r\n                    flappyBird.largura,flappyBird.altura,  \r\n                );\r\n            }\r\n        }\r\n        return flappyBird;  \r\n    }\r\n    // mensagem Get Ready tela de inicio\r\n    \r\n    const mensagemGetReady = {\r\n        spriteX: 134,\r\n        spriteY: 0,\r\n        largura: 174,\r\n        altura:  152,\r\n        x:       (canvas.width / 2) - 174 / 2,\r\n        y:       50,\r\n    \r\n        desenha() {\r\n            contexto.drawImage(\r\n                sprite, // Imagens  que carregamos em sprites \r\n                mensagemGetReady.spriteX,mensagemGetReady.spriteY,     // Sprite X, Sprite Y\r\n                mensagemGetReady.largura,mensagemGetReady.altura,      // with , height Tamanho do recorte na sprites\r\n                mensagemGetReady.x, mensagemGetReady.y,                // with , width Posicao que vai ficar na tela \r\n                mensagemGetReady.largura,mensagemGetReady.altura,  \r\n            );\r\n        }\r\n    }\r\n    \r\n    // tela game over \r\n    const mensagemGameOver = {\r\n        spriteX: 134,\r\n        spriteY: 153,\r\n        largura: 226,\r\n        altura:  200,\r\n        x:       (canvas.width / 2) - 226 / 2,\r\n        y:       50,\r\n    \r\n        desenha() {\r\n            contexto.drawImage(\r\n                sprite, // Imagens  que carregamos em sprites \r\n                mensagemGameOver.spriteX,mensagemGameOver.spriteY,     // Sprite X, Sprite Y\r\n                mensagemGameOver.largura,mensagemGameOver.altura,      // with , height Tamanho do recorte na sprites\r\n                mensagemGameOver.x, mensagemGameOver.y,                // with , width Posicao que vai ficar na tela \r\n                mensagemGameOver.largura,mensagemGameOver.altura,  \r\n            );\r\n        }\r\n    }\r\n    // cria os canos\r\n    \r\n    function CriaCanos(){\r\n        const canos = {\r\n            largura: 52,\r\n            altura: 400,\r\n            chao:{\r\n                spriteX: 0, \r\n                spriteY: 169,\r\n            },\r\n            ceu: {\r\n                spriteX: 52,\r\n                spriteY: 169,\r\n            },\r\n            espaco: 80,\r\n    \r\n            desenha() {\r\n                    canos.pares.forEach(function (par){\r\n                    const yRandom = par.y\r\n                    const espacamentoEntreCanos = 100 ;\r\n            \r\n                    const canoCeuX = par.x;\r\n                    const canoCeuY = yRandom;\r\n                    // [Cano do ceu ]\r\n                    contexto.drawImage(\r\n                        sprite, // Imagens  que carregamos em sprites\r\n                        canos.ceu.spriteX,canos.ceu.spriteY,\r\n                        canos.largura, canos.altura,\r\n                        canoCeuX,canoCeuY,\r\n                        canos.largura, canos.altura,\r\n                    )\r\n    \r\n                    const canoChaoX = par.x;\r\n                    const canoChaoY = canos.altura + espacamentoEntreCanos +yRandom;     \r\n                    // [cano do chao]\r\n                    contexto.drawImage(\r\n                        sprite, // Imagens  que carregamos em sprites\r\n                        canos.chao.spriteX,canos.chao.spriteY,\r\n                        canos.largura, canos.altura,\r\n                        canoChaoX,canoChaoY,\r\n                        canos.largura, canos.altura,\r\n                    )\r\n                    par.canoCeu ={\r\n                        x: canoCeuX,\r\n                        y: canos.altura + canoCeuY,\r\n                    },\r\n                    par.canoChao = {\r\n                        x: canoChaoX,\r\n                        y: canoChaoY,\r\n                    }\r\n                })\r\n    \r\n            },\r\n            temColisaoComOFlappyBird(par){\r\n                const cabecaDoFlappy = globais.flappyBird.y;\r\n                const peDoFlappy = globais.flappyBird.y + globais.flappyBird.altura;\r\n    \r\n                if(globais.flappyBird.x >= par.x){\r\n    \r\n                    if(cabecaDoFlappy <= par.canoCeu.y){\r\n                        som_Hit.play();\r\n                        return true;\r\n                    }\r\n                    if(peDoFlappy >= par.canoChao.y){\r\n                        som_Hit.play();\r\n                        return true;\r\n                    }\r\n    \r\n                    if(globais.flappyBird.x == par.x ){\r\n                        contador = contador + 1 \r\n                    }\r\n                \r\n                }\r\n           \r\n                return false\r\n            },\r\n            pares:[\r\n           \r\n            ],\r\n           \r\n            atualiza(){\r\n                const passou100Frames = frames % 100 === 0;\r\n                if(passou100Frames){\r\n                    canos.pares.push(\r\n                        {\r\n                            x: canvas.width,\r\n                            y:-150 * (Math.random()+1),\r\n                        }\r\n                    )\r\n                }\r\n                canos.pares.forEach(function (par){\r\n                    par.x = par.x - 5;\r\n    \r\n                    if(canos.temColisaoComOFlappyBird(par)){\r\n                        MudaParaTela(Telas.GAME_OVER)\r\n                    }\r\n    \r\n                    if(par.x + canos.largura <= 0){\r\n                        canos.pares.shift()\r\n                    }\r\n    \r\n                   \r\n                })\r\n            }\r\n    \r\n        }\r\n    \r\n        return canos\r\n    }\r\n    \r\n    function CriaPlacar(){\r\n        const placar = {\r\n    \r\n            desenha(font , x ,  y) {\r\n                contexto.font = `${font}px \"VT323\"`;\r\n                contexto.textAlign = 'right';\r\n                contexto.fillStyle = 'white'\r\n                contexto.fillText(`${contador}`,canvas.width - x,y)\r\n            },\r\n        \r\n        }\r\n    \r\n        return placar\r\n    }\r\n    // criação Telas\r\n    const globais = {};\r\n    let TelaAtiva = {};\r\n    let contador = 0\r\n    \r\n    function MudaParaTela(novaTela) {\r\n      TelaAtiva = novaTela;\r\n    \r\n      if(TelaAtiva.inicializa) {\r\n        TelaAtiva.inicializa();\r\n      }\r\n    }\r\n    \r\n    const Telas = {\r\n        \r\n        Inicio: {\r\n                inicializa() {\r\n                    globais.flappyBird = criaflappyBird();\r\n                    globais.canos = CriaCanos()\r\n                    globais.chao = CriaChao();\r\n                },\r\n                desenha() {\r\n                    planodefundo.desenha();\r\n                    globais.chao.desenha();\r\n                    globais.flappyBird.desenha();\r\n                    mensagemGetReady.desenha();\r\n                },\r\n                click() {\r\n                    MudaParaTela(Telas.Jogo)\r\n                },\r\n                atualiza() {\r\n                  globais.chao.atualiza();\r\n               \r\n                }\r\n        }\r\n    }\r\n    \r\n    Telas.Jogo = {\r\n        inicializa(){\r\n            globais.placar = CriaPlacar();\r\n        },\r\n        desenha() {\r\n            planodefundo.desenha();\r\n            globais.canos.desenha();\r\n            globais.chao.desenha();\r\n            globais.flappyBird.desenha();\r\n            globais.placar.desenha(35,10,35);\r\n        },\r\n        click(){\r\n            globais.flappyBird.pula();\r\n        },\r\n        atualiza() {\r\n    \r\n            globais.canos.atualiza();\r\n            globais.chao.atualiza();\r\n            globais.flappyBird.atualiza();\r\n        }\r\n    }\r\n    \r\n    Telas.GAME_OVER = {\r\n        inicializa() {\r\n            globais.chao = CriaChao();\r\n            globais.placar = CriaPlacar();\r\n        },\r\n        desenha() {\r\n            planodefundo.desenha();\r\n            mensagemGameOver.desenha();\r\n            globais.placar.desenha(30,80,145);\r\n        },\r\n        atualiza() {\r\n    \r\n        },\r\n        click(){\r\n            MudaParaTela(Telas.Inicio)\r\n            contador = 0;\r\n        }\r\n    }\r\n    \r\n    function loop () {\r\n    \r\n        TelaAtiva.desenha();\r\n        TelaAtiva.atualiza();\r\n        frames = frames + 1 \r\n        requestAnimationFrame(loop); // Vai ajudar desenhar na tela de forma performatica\r\n    }\r\n    \r\n    window.addEventListener('click', function() {\r\n        if(TelaAtiva.click){\r\n            TelaAtiva.click();\r\n        }\r\n    })\r\n    \r\n    MudaParaTela(Telas.Inicio)\r\n    loop();\r\nreturn (\r\n    <main>\r\n    <canvas id='game-canvas' width='320' height='480'></canvas>\r\n    </main>\r\n)\r\n}\r\n\r\nexport default Erro;"]},"metadata":{},"sourceType":"module"}